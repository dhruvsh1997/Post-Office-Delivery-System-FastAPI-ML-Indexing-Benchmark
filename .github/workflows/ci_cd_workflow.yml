name: CI/CD — Deploy to EC2 (SQLite)

on:
  push:
    branches: [ "master" ]

jobs:
  test:
    name: Test / smoke
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Smoke import check
        run: |
          python - <<'PY'
          import importlib
          for m in ["fastapi","sqlalchemy","pandas","joblib","sklearn","boto3"]:
              importlib.import_module(m)
          print("basic imports ok")
          PY

  # deploy:
  #   name: Deploy to EC2
  #   needs: test
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4

  #     - name: Install rsync
  #       run: |
  #         sudo apt-get update -y && sudo apt-get install -y rsync git
  #         python3 -m pip install --upgrade pip
  #         pip install boto3

  #     - name: SSH into EC2 and deploy
  #       uses: appleboy/ssh-action@v1.0.3
  #       with:
  #         host: ${{ secrets.EC2_HOST }}
  #         username: ${{ secrets.EC2_USER }}
  #         port: ${{ secrets.EC2_SSH_PORT }}
  #         key: ${{ secrets.EC2_SSH_KEY }}
  #         debug: true
  #         script: |
  #           set -e
  #           echo "Connected as $(whoami) on $(uname -a)"

  #           APP_DIR="${{ secrets.APP_DIR }}"

  #           if [ ! -d "$APP_DIR/.git" ]; then
  #             echo "First time setup → cloning repo"
  #             rm -rf "$APP_DIR"
  #             git clone https://github.com/${{ github.repository }} "$APP_DIR"
  #             cd "$APP_DIR"
  #             git checkout ${{ github.ref_name }}
  #           else
  #             echo "Repo exists → pulling latest"
  #             cd "$APP_DIR"
  #             git fetch --all
  #             git reset --hard origin/${{ github.ref_name }}
  #           fi

  #           if [ ! -d "venv" ]; then
  #             python3 -m venv venv
  #           fi
  #           . venv/bin/activate
  #           python -m pip install --upgrade pip
  #           pip install -r requirements.txt
  #           pip install boto3

  #           # AWS credentials for boto3
  #           mkdir -p ~/.aws
  #           {
  #             echo "[default]"
  #             echo "aws_access_key_id=${{ secrets.AWS_ACCESS_KEY_ID }}"
  #             echo "aws_secret_access_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}"
  #           } > ~/.aws/credentials

  #           {
  #             echo "[default]"
  #             echo "region=ap-south-1"
  #           } > ~/.aws/config

  #           sudo systemctl daemon-reload || true
  #           sudo systemctl restart postdelivery.service
  #           sudo systemctl status postdelivery.service --no-pager -n 50 || (sudo journalctl -u postdelivery.service -n 200; exit 1)
